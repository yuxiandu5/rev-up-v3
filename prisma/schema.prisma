generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  userName        String    @unique
  passwordHash    String
  isActive        Boolean   @default(true)
  recoverQuestion String
  answer          String
  lastLoginAt     DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  refreshTokens RefreshToken[]
}

// Rotating, single‑use refresh tokens. Store **hashes** only.
model RefreshToken {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  tokenHash     String    @unique // sha256(plaintext)
  prevTokenHash String?   @unique // anti‑replay chain
  userAgent     String?
  ipAddress     String?
  createdAt     DateTime  @default(now())
  expiresAt     DateTime
  consumedAt    DateTime? // set when rotated/used
  revokedAt     DateTime?

  @@index([userId, expiresAt])
}
